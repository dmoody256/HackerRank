# This file is licensed under the MIT License.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

import os
import json
import sys
import glob
import re
from sys import platform

env = Environment();

env.VariantDir('build', 'src', duplicate=0)
files = ["build/main.cpp"]
prog = env.Program("build/A_Very_Big_Sum", files)

Import('testModule')
test = env.Command( target = "test/testResults.txt",
                source = prog,
                action = str(os.path.abspath(sys.executable) + " "
                            + os.path.abspath(Dir('.').abspath + "/test/testA_Very_Big_Sum.py") + " "
                            + os.path.abspath(prog[0].abspath) + " "
                            + "> $TARGET").replace("\\", "/"),
                ENV = {'PYTHONPATH' : testModule})

AlwaysBuild( test )

sourceFiles = []
for file in files:
    sourceFiles = re.sub("^build", "../src", file)

if platform == "linux" or platform == "linux2":
    print("Eclipse C++ project not implemented yet")
elif platform == "darwin":
    print("XCode project not implemented yet")
elif platform == "win32":
    env.MSVSProject(target = 'MSVS/A_Very_Big_Sum' + env['MSVSPROJECTSUFFIX'],
                    srcs = sourceFiles,
                    buildtarget = prog,
                    variant = 'Debug')
